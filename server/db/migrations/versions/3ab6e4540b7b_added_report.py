"""added report

Revision ID: 3ab6e4540b7b
Revises: 94a1a71d6934
Create Date: 2025-05-10 16:21:55.088836

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3ab6e4540b7b'
down_revision: Union[str, None] = '94a1a71d6934'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('title_view',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_uuid', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('title_cover',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title_id', sa.Integer(), nullable=False),
    sa.Column('user_suggested', sa.String(), nullable=False),
    sa.Column('user_approved', sa.String(), nullable=True),
    sa.Column('fhd', sa.String(), nullable=True),
    sa.Column('hd', sa.String(), nullable=True),
    sa.Column('sd', sa.String(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('date_suggested', sa.DateTime(), nullable=False),
    sa.Column('date_approved', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], ),
    sa.ForeignKeyConstraint(['user_approved'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['user_suggested'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('title_list',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_uuid', sa.String(), nullable=False),
    sa.Column('title_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('title_meta',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title_id', sa.Integer(), nullable=False),
    sa.Column('user_suggested', sa.String(), nullable=False),
    sa.Column('title_ru', sa.String(), nullable=False),
    sa.Column('user_approved', sa.String(), nullable=True),
    sa.Column('author', sa.Integer(), nullable=True),
    sa.Column('artist', sa.Integer(), nullable=True),
    sa.Column('publisher', sa.Integer(), nullable=True),
    sa.Column('title_en', sa.String(), nullable=True),
    sa.Column('title_jp', sa.String(), nullable=True),
    sa.Column('title_an', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('tags', sa.String(), nullable=True),
    sa.Column('genres', sa.String(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('date_suggested', sa.DateTime(), nullable=False),
    sa.Column('date_approved', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['artist'], ['person.id'], ),
    sa.ForeignKeyConstraint(['author'], ['person.id'], ),
    sa.ForeignKeyConstraint(['publisher'], ['person.id'], ),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], ),
    sa.ForeignKeyConstraint(['user_approved'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['user_suggested'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('title_rate',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title_id', sa.Integer(), nullable=False),
    sa.Column('user_uuid', sa.String(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('title_update_subscription',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_uuid', sa.String(), nullable=False),
    sa.Column('title_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('page_asset',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('page_id', sa.Integer(), nullable=False),
    sa.Column('translate_team_id', sa.Integer(), nullable=False),
    sa.Column('asset_path', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.ForeignKeyConstraint(['translate_team_id'], ['translate_team.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('title_read_position',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_uuid', sa.String(), nullable=False),
    sa.Column('title_id', sa.Integer(), nullable=False),
    sa.Column('page_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('comment_carma',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('user_rated', sa.String(), nullable=False),
    sa.Column('positive', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['user_rated'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('report',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('reporter_uuid', sa.String(), nullable=False),
    sa.Column('report_type', sa.Enum('USER_REPORT', 'COMMENT_REPORT', 'TITLE_REPORT', 'PAGE_REPORT', name='reporttypeenum'), nullable=False),
    sa.Column('user_report_type', sa.Enum('EXPLICIT_CONTENT', 'PRIVILEGE_ABUSE', 'ANOTHER', name='userreporttypeenum'), nullable=True),
    sa.Column('comment_report_type', sa.Enum('SPAM', 'OFFTOP', 'SPOILER', 'ANOTHER', name='commentreporttypeenum'), nullable=True),
    sa.Column('title_report_type', sa.Enum('INAPPROPRIATE_META', 'INAPPROPRIATE_COVER', 'SPAM_PAGE', 'ANOTHER', name='titlereporttypeenum'), nullable=True),
    sa.Column('page_report_type', sa.Enum('INAPPROPRIATE_CAPTION', 'ANOTHER', name='pagereporttypeenum'), nullable=True),
    sa.Column('user_uuid', sa.String(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('title_id', sa.Integer(), nullable=True),
    sa.Column('page_id', sa.Integer(), nullable=True),
    sa.Column('caption', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.ForeignKeyConstraint(['reporter_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('titlelist')
    op.drop_table('userpfp')
    op.drop_table('notification_sender')
    op.drop_table('titlecover')
    op.drop_table('title_subscription')
    op.drop_table('page_translation')
    op.drop_table('notification')
    op.drop_table('rate')
    op.drop_table('titlemeta')
    op.drop_table('carma')
    op.drop_table('personcover')
    op.add_column('comment', sa.Column('pinned', sa.Boolean(), nullable=False))
    op.drop_constraint('page_order_volume_chapter_unique', 'page', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('page_order_volume_chapter_unique', 'page', ['order', 'volume', 'chapter'])
    op.drop_column('comment', 'pinned')
    op.create_table('personcover',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('person_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_suggested', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_approved', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approved', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('fhd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_suggested', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_approved', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['person_id'], ['person.id'], name='personcover_person_id_fkey'),
    sa.ForeignKeyConstraint(['user_approved'], ['user.uuid'], name='personcover_user_approved_fkey'),
    sa.ForeignKeyConstraint(['user_suggested'], ['user.uuid'], name='personcover_user_suggested_fkey'),
    sa.PrimaryKeyConstraint('id', name='personcover_pkey')
    )
    op.create_table('carma',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('comment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_rated', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('positive', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], name='carma_comment_id_fkey'),
    sa.ForeignKeyConstraint(['user_rated'], ['user.uuid'], name='carma_user_rated_fkey'),
    sa.PrimaryKeyConstraint('id', name='carma_pkey')
    )
    op.create_table('titlemeta',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_suggested', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title_ru', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_approved', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('author', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('artist', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('publisher', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('title_en', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('title_jp', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('title_an', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('tags', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('genres', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('approved', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_suggested', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_approved', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['artist'], ['person.id'], name='titlemeta_artist_fkey'),
    sa.ForeignKeyConstraint(['author'], ['person.id'], name='titlemeta_author_fkey'),
    sa.ForeignKeyConstraint(['publisher'], ['person.id'], name='titlemeta_publisher_fkey'),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], name='titlemeta_title_id_fkey'),
    sa.ForeignKeyConstraint(['user_approved'], ['user.uuid'], name='titlemeta_user_approved_fkey'),
    sa.ForeignKeyConstraint(['user_suggested'], ['user.uuid'], name='titlemeta_user_suggested_fkey'),
    sa.PrimaryKeyConstraint('id', name='titlemeta_pkey')
    )
    op.create_table('rate',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_rated', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], name='rate_title_id_fkey'),
    sa.ForeignKeyConstraint(['user_rated'], ['user.uuid'], name='rate_user_rated_fkey'),
    sa.PrimaryKeyConstraint('id', name='rate_pkey')
    )
    op.create_table('notification',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('notification_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('value', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='notification_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('page_translation',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('page_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('translate_team_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('asset_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], name='page_translation_page_id_fkey'),
    sa.ForeignKeyConstraint(['translate_team_id'], ['translate_team.id'], name='page_translation_translate_team_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='page_translation_pkey')
    )
    op.create_table('title_subscription',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_uuid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], name='title_subscription_title_id_fkey'),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], name='title_subscription_user_uuid_fkey'),
    sa.PrimaryKeyConstraint('id', name='title_subscription_pkey')
    )
    op.create_table('titlecover',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('title_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_suggested', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_approved', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('fhd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_suggested', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('date_approved', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('approved', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], name='titlecover_title_id_fkey'),
    sa.ForeignKeyConstraint(['user_approved'], ['user.uuid'], name='titlecover_user_approved_fkey'),
    sa.ForeignKeyConstraint(['user_suggested'], ['user.uuid'], name='titlecover_user_suggested_fkey'),
    sa.PrimaryKeyConstraint('id', name='titlecover_pkey')
    )
    op.create_table('notification_sender',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_uuid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('notification_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('viewed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['notification_id'], ['notification.id'], name='notification_sender_notification_id_fkey'),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], name='notification_sender_user_uuid_fkey'),
    sa.PrimaryKeyConstraint('id', name='notification_sender_pkey')
    )
    op.create_table('userpfp',
    sa.Column('uuid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('fhd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sd', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['uuid'], ['user.uuid'], name='userpfp_uuid_fkey'),
    sa.PrimaryKeyConstraint('uuid', name='userpfp_pkey')
    )
    op.create_table('titlelist',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_uuid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], name='titlelist_title_id_fkey'),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], name='titlelist_user_uuid_fkey'),
    sa.PrimaryKeyConstraint('id', name='titlelist_pkey')
    )
    op.drop_table('report')
    op.drop_table('comment_carma')
    op.drop_table('title_read_position')
    op.drop_table('page_asset')
    op.drop_table('title_update_subscription')
    op.drop_table('title_rate')
    op.drop_table('title_meta')
    op.drop_table('title_list')
    op.drop_table('title_cover')
    op.drop_table('title_view')
    # ### end Alembic commands ###
