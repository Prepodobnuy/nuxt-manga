"""new page

Revision ID: 94a1a71d6934
Revises: 709336ccee3f
Create Date: 2025-05-07 07:27:28.471195

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "94a1a71d6934"
down_revision: Union[str, None] = "709336ccee3f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_constraint("page_chapter_id_fkey", "page", type_="foreignkey")
    op.drop_constraint("chapter_volume_id_fkey", "chapter", type_="foreignkey")
    op.drop_constraint("volume_translation_id_fkey", "volume", type_="foreignkey")
    op.drop_constraint("volume_title_id_fkey", "volume", type_="foreignkey")
    op.drop_constraint("volume_user_published_fkey", "volume", type_="foreignkey")

    op.drop_table("chapter")
    op.drop_table("volume")
    op.drop_table("translation")

    op.add_column("page", sa.Column("title_id", sa.Integer(), nullable=False))
    op.add_column("page", sa.Column("user_uuid", sa.String(), nullable=False))
    op.add_column("page", sa.Column("volume", sa.Integer(), nullable=False))
    op.add_column("page", sa.Column("chapter", sa.Integer(), nullable=False))
    op.drop_constraint("page_order_key", "page", type_="unique")
    op.drop_column("page", "asset_path")
    op.drop_column("page", "chapter_id")

    op.create_table(
        "page_translation",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("page_id", sa.Integer(), nullable=False),
        sa.Column("translate_team_id", sa.Integer(), nullable=False),
        sa.Column("asset_path", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["page_id"],
            ["page.id"],
        ),
        sa.ForeignKeyConstraint(
            ["translate_team_id"],
            ["translate_team.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )

    op.create_foreign_key("page_title_id_fkey", "page", "title", ["title_id"], ["id"])
    op.create_foreign_key(
        "page_user_uuid_fkey", "page", "user", ["user_uuid"], ["uuid"]
    )
    op.create_unique_constraint(
        "page_order_volume_chapter_unique", "page", ["order", "volume", "chapter"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_table("page_translation")
    op.drop_constraint("page_order_volume_chapter_unique", "page", type_="unique")
    op.drop_constraint("page_user_uuid_fkey", "page", type_="foreignkey")
    op.drop_constraint("page_title_id_fkey", "page", type_="foreignkey")

    op.add_column(
        "page",
        sa.Column("chapter_id", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "page",
        sa.Column("asset_path", sa.VARCHAR(), autoincrement=False, nullable=True),
    )
    op.drop_column("page", "chapter")
    op.drop_column("page", "volume")
    op.drop_column("page", "user_uuid")
    op.drop_column("page", "title_id")
    op.create_unique_constraint("page_order_key", "page", ["order"])

    op.create_table(
        "translation",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "translate_group_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["title_id"], ["title.id"], name="translation_title_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["translate_group_id"],
            ["translate_team.id"],
            name="translation_translate_group_id_fkey",
        ),
        sa.PrimaryKeyConstraint("id", name="translation_pkey"),
    )

    op.create_table(
        "volume",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("translation_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("user_published", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.Column(
            "date_published",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["title_id"], ["title.id"], name="volume_title_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["translation_id"], ["translation.id"], name="volume_translation_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_published"], ["user.uuid"], name="volume_user_published_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="volume_pkey"),
    )

    op.create_table(
        "chapter",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("volume_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["volume_id"], ["volume.id"], name="chapter_volume_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="chapter_pkey"),
    )

    op.create_foreign_key(
        "page_chapter_id_fkey", "page", "chapter", ["chapter_id"], ["id"]
    )
    # ### end Alembic commands ###
