"""refactored translation

Revision ID: 0264e88212f4
Revises: c04fd5e0ad28
Create Date: 2025-05-11 09:45:22.665991

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0264e88212f4'
down_revision: Union[str, None] = 'c04fd5e0ad28'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('translate_team', sa.Column('approved_at', sa.DateTime(), nullable=True))
    op.add_column('translate_team', sa.Column('approved_user_uuid', sa.String(), nullable=True))
    op.add_column('translate_team', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.drop_constraint('translate_team_user_approved_fkey', 'translate_team', type_='foreignkey')
    op.create_foreign_key(None, 'translate_team', 'user', ['approved_user_uuid'], ['uuid'])
    op.drop_column('translate_team', 'user_approved')
    op.drop_column('translate_team', 'date_created')
    op.drop_column('translate_team', 'date_approved')
    op.add_column('translate_team_member', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.add_column('translate_team_title_ownership', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False))
    op.drop_column('translate_team_title_ownership', 'date_created')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('translate_team_title_ownership', sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_column('translate_team_title_ownership', 'created_at')
    op.drop_column('translate_team_member', 'created_at')
    op.add_column('translate_team', sa.Column('date_approved', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('translate_team', sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('translate_team', sa.Column('user_approved', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'translate_team', type_='foreignkey')
    op.create_foreign_key('translate_team_user_approved_fkey', 'translate_team', 'user', ['user_approved'], ['uuid'])
    op.drop_column('translate_team', 'created_at')
    op.drop_column('translate_team', 'approved_user_uuid')
    op.drop_column('translate_team', 'approved_at')
    # ### end Alembic commands ###
