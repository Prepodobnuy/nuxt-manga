"""added notification

Revision ID: b4d212687cde
Revises: 3ab6e4540b7b
Create Date: 2025-05-10 16:29:39.779217

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b4d212687cde'
down_revision: Union[str, None] = '3ab6e4540b7b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification_global',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification_global_view',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_uuid', sa.String(), nullable=False),
    sa.Column('notification_global_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['notification_global_id'], ['notification_global.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('target_user_uuid', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('notification_type', sa.Enum('USER', 'COMMENT', 'TITLE', 'PAGE', 'REPORT', 'GLOBAL', name='notificationtypeenum'), nullable=False),
    sa.Column('user_notification_type', sa.Enum('ROLE_CHANGED', 'DATA_CHANGED', name='usernotificationtypeenum'), nullable=True),
    sa.Column('comment_notification_type', sa.Enum('HIGHRATED', 'DELETED', 'REPLYED', name='commentnotificationtypeenum'), nullable=True),
    sa.Column('title_notification_type', sa.Enum('META_ACCEPTED', 'COVER_ACCEPTED', name='titlenotificationtypeenum'), nullable=True),
    sa.Column('page_notification_type', sa.Enum('NEW_PAGE_ADDED', name='pagenotificationtypeenum'), nullable=True),
    sa.Column('report_notification_type', sa.Enum('RESOLVED', 'REJECTED', name='reportnotificationtypeenum'), nullable=True),
    sa.Column('user_uuid', sa.String(), nullable=True),
    sa.Column('comment_id', sa.Integer(), nullable=True),
    sa.Column('title_id', sa.Integer(), nullable=True),
    sa.Column('page_id', sa.Integer(), nullable=True),
    sa.Column('report_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_read', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comment.id'], ),
    sa.ForeignKeyConstraint(['page_id'], ['page.id'], ),
    sa.ForeignKeyConstraint(['report_id'], ['report.id'], ),
    sa.ForeignKeyConstraint(['target_user_uuid'], ['user.uuid'], ),
    sa.ForeignKeyConstraint(['title_id'], ['title.id'], ),
    sa.ForeignKeyConstraint(['user_uuid'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notification')
    op.drop_table('notification_global_view')
    op.drop_table('notification_global')
    # ### end Alembic commands ###
