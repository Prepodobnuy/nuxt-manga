"""fixed person cover

Revision ID: 75e284e2b908
Revises: a55dfd6f27a4
Create Date: 2025-05-19 19:00:40.149443

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '75e284e2b908'
down_revision: Union[str, None] = 'a55dfd6f27a4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('person_cover_approved_user_uuid_fkey', 'person_cover', type_='foreignkey')
    op.drop_column('person_cover', 'approved')
    op.drop_column('person_cover', 'created_at')
    op.drop_column('person_cover', 'approved_user_uuid')
    op.drop_column('person_cover', 'approved_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('person_cover', sa.Column('approved_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('person_cover', sa.Column('approved_user_uuid', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('person_cover', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('person_cover', sa.Column('approved', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.create_foreign_key('person_cover_approved_user_uuid_fkey', 'person_cover', 'user', ['approved_user_uuid'], ['uuid'])
    # ### end Alembic commands ###
