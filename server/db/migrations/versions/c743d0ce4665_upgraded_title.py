"""upgraded title

Revision ID: c743d0ce4665
Revises: 37d991f4a9ef
Create Date: 2025-05-11 09:54:07.639035

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c743d0ce4665'
down_revision: Union[str, None] = '37d991f4a9ef'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('title', sa.Column('created_user_uuid', sa.String(), nullable=False))
    op.add_column('title', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.drop_constraint('title_user_published_fkey', 'title', type_='foreignkey')
    op.create_foreign_key(None, 'title', 'user', ['created_user_uuid'], ['uuid'])
    op.drop_column('title', 'date_published')
    op.drop_column('title', 'user_published')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('title', sa.Column('user_published', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('title', sa.Column('date_published', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'title', type_='foreignkey')
    op.create_foreign_key('title_user_published_fkey', 'title', 'user', ['user_published'], ['uuid'])
    op.drop_column('title', 'created_at')
    op.drop_column('title', 'created_user_uuid')
    # ### end Alembic commands ###
